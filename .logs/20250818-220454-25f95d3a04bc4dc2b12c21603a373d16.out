âž¤ YN0000: Â· Yarn 4.9.2
âž¤ YN0000: â”Œ Resolution step
âž¤ YN0085: â”‚ + @types/mime-types@npm:3.0.1, @types/nodemailer@npm:7.0.0, form-data@npm:4.0.4, googleapis@npm:156.0.0, mime-types@npm:3.0.1, node-fetch@npm:2.7.0, and 105 more.
âž¤ YN0000: â”” Completed in 0s 799ms
âž¤ YN0000: â”Œ Post-resolution validation
âž¤ YN0060: â”‚ @typescript-eslint/parser is listed by your project with version 7.0.0 (p6cb6c), which doesn't satisfy what @typescript-eslint/eslint-plugin requests (^6.0.0-alpha).
âž¤ YN0060: â”‚ eslint is listed by your project with version 9.24.0 (pe6e00), which doesn't satisfy what @typescript-eslint/eslint-plugin and other dependencies request (^8.57.0).
âž¤ YN0060: â”‚ nodemailer is listed by your project with version 7.0.5 (p4594f), which doesn't satisfy what next-auth requests (^6.6.5).
âž¤ YN0002: â”‚ app@workspace:. doesn't provide prettier (pd88b5), requested by eslint-plugin-prettier.
âž¤ YN0086: â”‚ Some peer dependencies are incorrectly met by your project; run yarn explain peer-requirements <hash> for details, where <hash> is the six-letter p-prefixed code.
âž¤ YN0086: â”‚ Some peer dependencies are incorrectly met by dependencies; run yarn explain peer-requirements for details.
âž¤ YN0000: â”” Completed
âž¤ YN0000: â”Œ Fetch step
âž¤ YN0013: â”‚ 111 packages were added to the project (+ 198.18 MiB).
âž¤ YN0000: â”” Completed in 3s 187ms
âž¤ YN0000: â”Œ Link step
âž¤ YN0007: â”‚ esbuild@npm:0.25.9 must be built because it never has been before or the last one failed
âž¤ YN0008: â”‚ prisma@npm:6.7.0 [0460f] must be rebuilt because its dependency tree changed
âž¤ YN0008: â”‚ @prisma/client@npm:6.7.0 [0460f] must be rebuilt because its dependency tree changed
âž¤ YN0000: â”” Completed in 4s 126ms
âž¤ YN0000: Â· Done with warnings in 8s 281ms
Environment variables loaded from .env
Prisma schema loaded from prisma/schema.prisma

âœ” Generated Prisma Client (v6.7.0) to ./node_modules/.prisma/client in 112ms

Start by importing your Prisma Client (See: https://pris.ly/d/importing-client)

Tip: Interested in query caching in just a few lines of code? Try Accelerate today! https://pris.ly/tip-3-accelerate

Starting server...
  â–² Next.js 14.2.28
  - Local:        http://localhost:3000
  - Environments: .env
  - Experiments (use with caution):
    Â· outputFileTracingRoot

 âœ“ Starting...
 âœ“ Ready in 2.5s
 â—‹ Compiling / ...
 âœ“ Compiled / in 2.7s (791 modules)
 GET / 200 in 3123ms
 âœ“ Compiled in 409ms (280 modules)
 âœ“ Compiled /api/auth/[...nextauth] in 185ms (510 modules)
 GET /api/auth/providers 200 in 586ms
 GET /api/auth/csrf 200 in 33ms
 POST /api/auth/callback/credentials 200 in 33ms
 GET /api/auth/session 200 in 32ms
 â—‹ Compiling /dashboard ...
 âœ“ Compiled /dashboard in 718ms (932 modules)
 GET /dashboard?_rsc=1v308 200 in 826ms
 GET /dashboard 200 in 56ms
 â—‹ Compiling /login ...
 âœ“ Compiled /login in 584ms (992 modules)
 GET /api/auth/session 200 in 683ms
 GET /api/auth/session 200 in 128ms
 GET /login?_rsc=1ebxd 200 in 28ms
 GET / 200 in 59ms
 GET /api/auth/providers 200 in 37ms
 GET /api/auth/csrf 200 in 36ms
 POST /api/auth/callback/credentials 200 in 34ms
 GET /api/auth/session 200 in 33ms
 GET / 200 in 41ms
 GET / 200 in 42ms
 GET /api/auth/providers 200 in 32ms
 GET /api/auth/csrf 200 in 31ms
 POST /api/auth/callback/credentials 200 in 33ms
 GET /api/auth/session 200 in 31ms
 GET /dashboard?_rsc=1gtj6 200 in 32ms
 GET /login?_rsc=8ipd9 200 in 26ms
 GET / 200 in 30ms
 GET / 200 in 33ms
 GET /api/auth/session 200 in 45ms
 GET /api/auth/session 200 in 45ms
 GET /login?_rsc=1ebxd 200 in 28ms
 GET / 200 in 31ms
 GET / 200 in 32ms
 GET / 200 in 28ms
 GET /api/auth/session 200 in 42ms
 GET /login?_rsc=1ebxd 200 in 25ms
 GET /api/auth/session 200 in 37ms
 GET / 200 in 32ms
 GET / 200 in 30ms
 GET /api/auth/session 200 in 38ms
 GET /api/auth/session 200 in 40ms
 GET /login?_rsc=1ebxd 200 in 26ms
 GET / 200 in 38ms
 GET / 200 in 37ms
 GET /api/auth/session 200 in 39ms
 GET /login?_rsc=1ebxd 200 in 26ms
 GET /api/auth/session 200 in 35ms
 GET / 200 in 31ms
 GET /api/auth/providers 200 in 37ms
 GET /api/auth/csrf 200 in 35ms
 POST /api/auth/callback/credentials 200 in 35ms
 GET /api/auth/session 200 in 36ms
 GET /dashboard?_rsc=3y0gy 200 in 28ms
 GET / 200 in 32ms
[?25h
