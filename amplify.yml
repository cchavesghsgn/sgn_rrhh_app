version: 1
applications:
  - appRoot: app
    frontend:
      phases:
        preBuild:
          commands:
            # Node 18
            - if command -v nvm >/dev/null 2>&1; then nvm install 18 && nvm use 18; else echo "nvm not found"; fi

            # Caches y tmp seguros
            - export HOME=/tmp
            - export XDG_CACHE_HOME=/tmp/.cache
            - export NPM_CONFIG_CACHE=/tmp/.npm
            - export TMPDIR=/tmp
            - mkdir -p "$HOME" "$XDG_CACHE_HOME" "$NPM_CONFIG_CACHE" "$TMPDIR"

            # Prisma: cache local
            - export PRISMA_CACHE_DIR=/tmp/.cache/prisma
            - mkdir -p "$PRISMA_CACHE_DIR"

            # Datasource seguro para CI (si no viene seteado de Amplify)
            - mkdir -p /tmp/prisma-ci
            - export DATABASE_URL="${DATABASE_URL:-file:/tmp/prisma-ci/dev.db}"

            # Dependencias (incluye devDependencies y dispara el postinstall de @prisma/client -> prisma generate)
            - yarn install --frozen-lockfile --production=false

            # (Opcional) checks útiles
            - test -x ./node_modules/.bin/prisma || (echo "Prisma CLI not found in node_modules/.bin"; ls -la ./node_modules/.bin; exit 1)
            - node -e "console.log('os.homedir() =>', require('os').homedir())"
            - '[ -d "./node_modules/@prisma/engines" ] && ls -1 ./node_modules/@prisma/engines || true'

            # Validación opcional (solo en main/master con RUN_DB_TASKS=1)
            - |
              if [[ "$AMPLIFY_BRANCH" =~ ^(master|main)$ && "$RUN_DB_TASKS" = "1" ]]; then
                yarn db:validate
              fi

        build:
          commands:
            - yarn build

        postBuild:
          commands:
            # Reasegurar envs para esta fase
            - export HOME=/tmp
            - export XDG_CACHE_HOME=/tmp/.cache
            - export NPM_CONFIG_CACHE=/tmp/.npm
            - export TMPDIR=/tmp
            - export PRISMA_CACHE_DIR=/tmp/.cache/prisma
            - mkdir -p "$HOME" "$XDG_CACHE_HOME" "$NPM_CONFIG_CACHE" "$TMPDIR" "$PRISMA_CACHE_DIR"

            # Migraciones / sincronización de schema (solo en main/master y si está habilitado)
            - |
              if [[ "$AMPLIFY_BRANCH" =~ ^(master|main)$ && "$RUN_DB_TASKS" = "1" ]]; then
                if [ -d prisma/migrations ] && [ "$(ls -A prisma/migrations 2>/dev/null)" ]; then
                  ./node_modules/.bin/prisma migrate deploy --schema ./prisma/schema.prisma
                else
                  ./node_modules/.bin/prisma db push --skip-generate --schema ./prisma/schema.prisma
                fi
              fi

            # Seed opcional
            - |
              if [[ "$AMPLIFY_BRANCH" =~ ^(master|main)$ && "$RUN_DB_TASKS" = "1" ]]; then
                yarn db:seed-production
              fi

      artifacts:
        baseDirectory: .next
        files:
          - '**/*'

      cache:
        paths:
          - node_modules/**/*
          - .next/cache/**/*